/*
 * Beacon Suedtirol API TEST
 * The API for the Beacon Suedtirol project for configuring beacons and accessing beacon data.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package it.bz.beacon.beaconsuedtirolsdk.swagger.client.api;

import it.bz.beacon.beaconsuedtirolsdk.swagger.client.ApiException;
import it.bz.beacon.beaconsuedtirolsdk.swagger.client.model.BeaconIssue;
import it.bz.beacon.beaconsuedtirolsdk.swagger.client.model.IssueCreation;
import it.bz.beacon.beaconsuedtirolsdk.swagger.client.model.IssueSolution;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IssueControllerApi
 */
@Ignore
public class IssueControllerApiTest {

    private final IssueControllerApi api = new IssueControllerApi();

    
    /**
     * Create a issue
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUsingPOST2Test() throws ApiException {
        IssueCreation issueCreation = null;
        BeaconIssue response = api.createUsingPOST2(issueCreation);

        // TODO: test validations
    }
    
    /**
     * View a list of available issues
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getListUsingGET3Test() throws ApiException {
        Boolean onlyUnresolved = null;
        List<BeaconIssue> response = api.getListUsingGET3(onlyUnresolved);

        // TODO: test validations
    }
    
    /**
     * View a list of available issues for the specified beacon ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getListUsingGET4Test() throws ApiException {
        String beaconId = null;
        Boolean onlyUnresolved = null;
        List<BeaconIssue> response = api.getListUsingGET4(beaconId, onlyUnresolved);

        // TODO: test validations
    }
    
    /**
     * Search a issue with an ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsingGET2Test() throws ApiException {
        Long id = null;
        BeaconIssue response = api.getUsingGET2(id);

        // TODO: test validations
    }
    
    /**
     * Update a issue
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUsingPOSTTest() throws ApiException {
        Long id = null;
        IssueSolution issueSolution = null;
        BeaconIssue response = api.updateUsingPOST(id, issueSolution);

        // TODO: test validations
    }
    
}
