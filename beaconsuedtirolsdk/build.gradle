apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.kontaktio:sdk:4.0.2'
    implementation 'io.swagger:swagger-annotations:1.5.15'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'com.squareup.okhttp:logging-interceptor:2.7.5'
    implementation 'com.squareup:otto:1.3.8'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'org.threeten:threetenbp:1.3.5'
    implementation 'io.gsonfire:gson-fire:1.8.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    // Room components
    implementation "androidx.room:room-runtime:2.0.0"
    annotationProcessor "androidx.room:room-compiler:2.0.0"
    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.0.0"
    // WorkManager for background tasks
    implementation "androidx.work:work-runtime:2.0.0-rc01"
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        bar(MavenPublication) {
            groupId 'xxx.test'
            artifactId 'sdk'
            version '0.1'
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/beaconsuedtirolsdk-release.aar")
        }
    }
    repositories {
        maven {
            url "s3://it.bz.opendatahub"
            credentials(AwsCredentials) {
                accessKey "${System.getenv('S3_REPO_USERNAME')}"
                secretKey "${System.getenv('S3_REPO_PASSWORD')}"
            }
        }
    }
}
